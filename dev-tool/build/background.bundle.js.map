{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./background.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AC7EA,IAAM,WAAW,GAAgB,EAAE,CAAC;AAGpC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,UAAC,IAAI;IAExC,IAAM,iBAAiB,GAAG,UAAC,OAAgB,EAAE,MAAM;QACzC,SAAK,GAAa,OAAO,MAApB,EAAE,MAAM,GAAK,OAAO,OAAZ,CAAa;QAElC,IAAI,MAAM,KAAK,kBAAkB,EAAE;YACjC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;SAC7B;QAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC,CAAC;IAGF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAG9C,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,UAAC,MAAM;QACnC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAGnD,KAAK,IAAM,GAAG,IAAI,WAAW,EAAE;YAC7B,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,MAAM,EAAE;gBAC/B,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC;gBACxB,MAAM;aACP;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAGH,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,UAAC,OAAgB,EAAE,MAAM;IACpD,OAAG,GAAK,MAAM,IAAX,CAAY;IAEvB,IAAI,GAAG,EAAE;QACP,IAAM,KAAK,GAAG,UAAG,GAAG,CAAC,EAAE,CAAE,CAAC;QAE1B,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;YACtB,WAAW,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC;gBAC7B,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC,CAAC;SACJ;KACF;AACH,CAAC,CAAC,CAAC","file":"background.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./background.ts\");\n","/* eslint-disable */\nimport type { Connections, Message } from './types/types';\n/* eslint-enable */\n\n// Listens for events from DevTools panel and content.js (package intermediary)\nconst connections: Connections = {};\n\n// runtime.onConnect is fired when a connection is made w/ an extension process or content script\nchrome.runtime.onConnect.addListener((port) => {\n  // Listen for messages from DevTools panel\n  const extensionListener = (message: Message, portID) => {\n    const { tabId, action } = message;\n    // Initial connection â€“ store current instance of DevTools page\n    if (action === 'connectChromogen') {\n      connections[tabId] = portID;\n    }\n    // Relay message to content.ts -> package\n    chrome.tabs.sendMessage(Number(tabId), message);\n  };\n\n  // Add event listener defined above to current DevTools panel instance\n  port.onMessage.addListener(extensionListener);\n\n  // Handle disconnect\n  port.onDisconnect.addListener((portID) => {\n    portID.onMessage.removeListener(extensionListener);\n    // remove current DevTool instance from connections\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in connections) {\n      if (connections[key] === portID) {\n        delete connections[key];\n        break;\n      }\n    }\n  });\n});\n\n// Listen for messages from Chromogen package (sent via content.js)\nchrome.runtime.onMessage.addListener((message: Message, sender) => {\n  const { tab } = sender;\n\n  if (tab) {\n    const tabId = `${tab.id}`;\n    // Relay message to devTool instance\n    if (connections[tabId]) {\n      connections[tabId].postMessage({\n        action: message.action,\n        stateObj: message.stateObj,\n        data: message.data\n      });\n    }\n  }\n});\n"],"sourceRoot":""}
